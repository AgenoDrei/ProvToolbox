//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.11.10 at 10:15:17 AM GMT 
//


package org.openprovenance.prov.xml;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBToStringBuilder;


/**
 * 
 *             Java class for Container complex type. See <A href="http://twiki.ipaw.info/bin/view/Challenge/OPM1-01Review">Container</A>.
 *          
 * 
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Container", namespace = "http://openprovenance.org/prov-xml#", propOrder = {
    "accounts",
    "processExecutions",
    "entities",
    "agents",
    "dependencies",
    "annotations",
    "annotation"
})
@XmlSeeAlso({
    Account.class
})
public class Container
    implements Annotable, Equals, HashCode, ToString
{

    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected Accounts accounts;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected ProcessExecutions processExecutions;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected Entities entities;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected Agents agents;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected Dependencies dependencies;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#")
    protected Annotations annotations;
    @XmlElement(namespace = "http://openprovenance.org/prov-xml#", required = true)
    protected EmbeddedAnnotation annotation;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;

    /**
     * Gets the value of the accounts property.
     * 
     * @return
     *     possible object is
     *     {@link Accounts }
     *     
     */
    public Accounts getAccounts() {
        return accounts;
    }

    /**
     * Sets the value of the accounts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Accounts }
     *     
     */
    public void setAccounts(Accounts value) {
        this.accounts = value;
    }

    /**
     * Gets the value of the processExecutions property.
     * 
     * @return
     *     possible object is
     *     {@link ProcessExecutions }
     *     
     */
    public ProcessExecutions getProcessExecutions() {
        return processExecutions;
    }

    /**
     * Sets the value of the processExecutions property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProcessExecutions }
     *     
     */
    public void setProcessExecutions(ProcessExecutions value) {
        this.processExecutions = value;
    }

    /**
     * Gets the value of the entities property.
     * 
     * @return
     *     possible object is
     *     {@link Entities }
     *     
     */
    public Entities getEntities() {
        return entities;
    }

    /**
     * Sets the value of the entities property.
     * 
     * @param value
     *     allowed object is
     *     {@link Entities }
     *     
     */
    public void setEntities(Entities value) {
        this.entities = value;
    }

    /**
     * Gets the value of the agents property.
     * 
     * @return
     *     possible object is
     *     {@link Agents }
     *     
     */
    public Agents getAgents() {
        return agents;
    }

    /**
     * Sets the value of the agents property.
     * 
     * @param value
     *     allowed object is
     *     {@link Agents }
     *     
     */
    public void setAgents(Agents value) {
        this.agents = value;
    }

    /**
     * Gets the value of the dependencies property.
     * 
     * @return
     *     possible object is
     *     {@link Dependencies }
     *     
     */
    public Dependencies getDependencies() {
        return dependencies;
    }

    /**
     * Sets the value of the dependencies property.
     * 
     * @param value
     *     allowed object is
     *     {@link Dependencies }
     *     
     */
    public void setDependencies(Dependencies value) {
        this.dependencies = value;
    }

    /**
     * Gets the value of the annotations property.
     * 
     * @return
     *     possible object is
     *     {@link Annotations }
     *     
     */
    public Annotations getAnnotations() {
        return annotations;
    }

    /**
     * Sets the value of the annotations property.
     * 
     * @param value
     *     allowed object is
     *     {@link Annotations }
     *     
     */
    public void setAnnotations(Annotations value) {
        this.annotations = value;
    }

    /**
     * Gets the value of the annotation property.
     * 
     * @return
     *     possible object is
     *     {@link EmbeddedAnnotation }
     *     
     */
    public EmbeddedAnnotation getAnnotation() {
        return annotation;
    }

    /**
     * Sets the value of the annotation property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmbeddedAnnotation }
     *     
     */
    public void setAnnotation(EmbeddedAnnotation value) {
        this.annotation = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof Container)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        final Container that = ((Container) object);
        equalsBuilder.append(this.getAccounts(), that.getAccounts());
        equalsBuilder.append(this.getProcessExecutions(), that.getProcessExecutions());
        equalsBuilder.append(this.getEntities(), that.getEntities());
        equalsBuilder.append(this.getAgents(), that.getAgents());
        equalsBuilder.append(this.getDependencies(), that.getDependencies());
        equalsBuilder.append(this.getAnnotations(), that.getAnnotations());
        equalsBuilder.append(this.getAnnotation(), that.getAnnotation());
        equalsBuilder.append(this.getId(), that.getId());
    }

    public boolean equals(Object object) {
        if (!(object instanceof Container)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        hashCodeBuilder.append(this.getAccounts());
        hashCodeBuilder.append(this.getProcessExecutions());
        hashCodeBuilder.append(this.getEntities());
        hashCodeBuilder.append(this.getAgents());
        hashCodeBuilder.append(this.getDependencies());
        hashCodeBuilder.append(this.getAnnotations());
        hashCodeBuilder.append(this.getAnnotation());
        hashCodeBuilder.append(this.getId());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public void toString(ToStringBuilder toStringBuilder) {
        {
            Accounts theAccounts;
            theAccounts = this.getAccounts();
            toStringBuilder.append("accounts", theAccounts);
        }
        {
            ProcessExecutions theProcessExecutions;
            theProcessExecutions = this.getProcessExecutions();
            toStringBuilder.append("processExecutions", theProcessExecutions);
        }
        {
            Entities theEntities;
            theEntities = this.getEntities();
            toStringBuilder.append("entities", theEntities);
        }
        {
            Agents theAgents;
            theAgents = this.getAgents();
            toStringBuilder.append("agents", theAgents);
        }
        {
            Dependencies theDependencies;
            theDependencies = this.getDependencies();
            toStringBuilder.append("dependencies", theDependencies);
        }
        {
            Annotations theAnnotations;
            theAnnotations = this.getAnnotations();
            toStringBuilder.append("annotations", theAnnotations);
        }
        {
            EmbeddedAnnotation theAnnotation;
            theAnnotation = this.getAnnotation();
            toStringBuilder.append("annotation", theAnnotation);
        }
        {
            String theId;
            theId = this.getId();
            toStringBuilder.append("id", theId);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new JAXBToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

}
