<?xml version="1.0" encoding="UTF-8"?>

<!-- Authors: Luc Moreau

     Transformation of the OPM OPMX schema into PROV compatible.
     Purely tentative at this stage. Still some OPMX legacy.
     PROV-DM not fully encoded yet.
     Only work in progress.
  -->

<!-- Known issues:
     use of id is not appropriate to capture prov identifiers
     -->


<xs:schema targetNamespace="http://openprovenance.org/prov-xml#"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:prov="http://openprovenance.org/prov-xml#"
           xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           jxb:version="2.0">


  <xs:element name="container" type="prov:Container">
	<xs:annotation>
	  <xs:documentation>A set of assertions about the provenance of things</xs:documentation>
	</xs:annotation>
  </xs:element>

  <xs:complexType name="Container">
    <xs:annotation>
      <xs:appinfo>
        <jxb:class>
         <jxb:javadoc>
           <![CDATA[ Java class for Container complex type. See <A href="http://twiki.ipaw.info/bin/view/Challenge/OPM1-01Review">Container</A>.]]>
         </jxb:javadoc>
        </jxb:class>
      </xs:appinfo>
    </xs:annotation> 
	<xs:sequence>
	  <xs:element name="accounts" type="prov:Accounts" minOccurs="0"/>
	  <xs:element name="activities" type="prov:Activities" minOccurs="0"/>
	  <xs:element name="entities" type="prov:Entities" minOccurs="0"/>
	  <xs:element name="agents" type="prov:Agents" minOccurs="0"/>
	  <xs:element name="dependencies" type="prov:Dependencies" minOccurs="0"/>
	  <xs:element name="annotations" type="prov:Annotations" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="ContainerRef">
    <xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="ActivityRef">
	<xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="EntityRef">
	<xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="AgentRef">
	<xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="AccountRef">
	<xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="RoleRef">
    <xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="DependencyRef">
    <xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  <xs:complexType name="AnnotationRef">
    <xs:attribute name="ref" type="xs:IDREF"/>
  </xs:complexType>
  

  <xs:complexType name="Account">
    <xs:complexContent>
      <xs:extension base="prov:Container">
	<xs:sequence>
	  <xs:element name="asserter" type="prov:AgentRef"  minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Role">
	<xs:sequence>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="value" type="xs:string"/>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>



  <xs:complexType name="Annotation">
	<xs:complexContent>
          <xs:extension base="prov:EmbeddedAnnotation">
            <xs:sequence>
              <xs:choice minOccurs="0" maxOccurs="1">
                <xs:element name="externalSubject" type="xs:anyURI"/>
                <xs:element name="localSubject"    type="xs:IDREF"/>
              </xs:choice>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="EmbeddedAnnotation">
     <xs:sequence>
       <xs:element name="property" type="prov:Property"   minOccurs="1"    maxOccurs="unbounded"/>
       <xs:element name="account"  type="prov:AccountRef" minOccurs="0"    maxOccurs="unbounded" />
       <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
     </xs:sequence>
     <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="Attributes">
     <xs:sequence>
       <xs:element name="attribute" type="prov:Attribute"   minOccurs="1"    maxOccurs="unbounded"/>
     </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Attribute">
     <xs:sequence>
        <xs:element name="value" type="xs:anyType"/>
     </xs:sequence>
     <xs:attribute name="name" type="xs:anyURI"/>
  </xs:complexType>


  <xs:complexType name="Property">
     <xs:sequence>
        <xs:element name="value" type="xs:anyType"/>
     </xs:sequence>
     <xs:attribute name="attribute" type="xs:anyURI"/>
  </xs:complexType>


  <xs:element name="annotation" type="prov:EmbeddedAnnotation"/>
  <xs:element name="attributes" type="prov:Attributes"/>

  <xs:complexType name="Activity">
	<xs:sequence>
	  <xs:element name="account" minOccurs="0" maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:attributes"  minOccurs="1" maxOccurs="1"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>


  <xs:complexType name="Entity">
	<xs:sequence>
	  <xs:element name="account" minOccurs="0" maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>


  <xs:complexType name="Agent">
	<xs:sequence>
	  <xs:element name="account" minOccurs="0" maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>


  <xs:complexType name="Used">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="role"    type="prov:Role"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
      <xs:element name="time"    type="prov:OTime" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasGeneratedBy">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="role"    type="prov:Role"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
      <xs:element name="time"    type="prov:OTime" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasControlledBy">
	<xs:sequence>
	  <xs:element name="effect"      type="prov:ActivityRef"/>
	  <xs:element name="role"        type="prov:Role"/>
	  <xs:element name="cause"       type="prov:AgentRef"/>
	  <xs:element name="account"     minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
      <xs:element name="startTime"   type="prov:OTime" minOccurs="0"/>
      <xs:element name="endTime"     type="prov:OTime" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasDerivedFrom">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
      <xs:element name="time"    type="prov:OTime" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasTriggeredBy">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
      <xs:element name="time"    type="prov:OTime" minOccurs="0"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>


  <xs:complexType name="UsedStar">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasGeneratedByStar">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasDerivedFromStar">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="WasTriggeredByStar">
	<xs:sequence>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:element name="account" minOccurs="0"    maxOccurs="unbounded" type="prov:AccountRef"/>
	  <xs:element ref="prov:annotation"  minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:ID"/>
  </xs:complexType>

  <xs:complexType name="Dependencies">
	<xs:sequence>
	  <xs:choice minOccurs="0" maxOccurs="unbounded">
		<xs:element name="used"               type="prov:Used"/>
		<xs:element name="wasGeneratedBy"     type="prov:WasGeneratedBy"/>
		<xs:element name="wasTriggeredBy"     type="prov:WasTriggeredBy"/>
		<xs:element name="wasDerivedFrom"     type="prov:WasDerivedFrom"/>
		<xs:element name="wasControlledBy"    type="prov:WasControlledBy"/>
		<xs:element name="usedStar"           type="prov:UsedStar"/>
		<xs:element name="wasGeneratedByStar" type="prov:WasGeneratedByStar"/>
		<xs:element name="wasDerivedFromStar" type="prov:WasDerivedFromStar"/>
	  </xs:choice>
	</xs:sequence>
  </xs:complexType>

  <xs:complexType name="Entities">
	<xs:sequence>
	  <xs:element name="entity" type="prov:Entity" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>


  <xs:complexType name="Accounts">
	<xs:sequence>
	  <xs:element name="account"  type="prov:Account"  minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element name="overlaps" type="prov:Overlaps" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>

  <xs:complexType name="Overlaps">
	<xs:sequence>
	  <xs:element name="account" type="prov:AccountRef" minOccurs="2" maxOccurs="2"/>
	</xs:sequence>
  </xs:complexType>


  <xs:complexType name="Activities">
	<xs:sequence>
	  <xs:element name="activity" type="prov:Activity" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>

  <xs:complexType name="Agents">
	<xs:sequence>
	  <xs:element name="agent"   type="prov:Agent" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>
  
  <xs:complexType name="Annotations">
    <xs:sequence>
      <xs:element name="annotation"   type="prov:Annotation" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  

 <!-- Observed Time allow for interval of observation. -->

  <xs:complexType name="OTime">
	<xs:annotation>
	  <xs:documentation>Observed Time allow for interval of observation, where an event is said to occur no earlier than a given time t1 and no later than a given time t2. When the event is observed to occur at a specific time, it is not convenient to use an interval. Instead, one can use the alternate exactlyAt attribute. We note that exactlyAt is disjoint from noEarlierThan and noLaterThan.</xs:documentation>
	</xs:annotation>
	<xs:sequence>
	</xs:sequence>
	  <xs:attribute name="noEarlierThan" type="xs:dateTime" />
	  <xs:attribute name="noLaterThan"   type="xs:dateTime" />
	  <xs:attribute name="exactlyAt"     type="xs:dateTime" />
  </xs:complexType>



</xs:schema>
